/*
 * Copyright (c) 2018. Lorem ipsum dolor sit amet, consectetur adipiscing elit.
 * Morbi non lorem porttitor neque feugiat blandit. Ut vitae ipsum eget quam lacinia accumsan.
 * Etiam sed turpis ac ipsum condimentum fringilla. Maecenas magna.
 * Proin dapibus sapien vel ante. Aliquam erat volutpat. Pellentesque sagittis ligula eget metus.
 * Vestibulum commodo. Ut rhoncus gravida arcu.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: packet.proto

package com.handge.bigdata.proto;

public final class Packet {
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_com_handge_bigdata_proto_PacketData_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_com_handge_bigdata_proto_PacketData_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.FileDescriptor
            descriptor;

    static {
        String[] descriptorData = {
                "\n\014packet.proto\022\030com.handge.bigdata.proto" +
                        "\"\200\003\n\nPacketData\022\024\n\014ipPorto2Name\030\001 \001(\t\022\r\n" +
                        "\005srcIp\030\002 \001(\t\022\017\n\007srcPort\030\003 \001(\r\022\r\n\005dstIp\030\004" +
                        " \001(\t\022\017\n\007dstPort\030\005 \001(\r\022\r\n\005proto\030\006 \001(\t\022\022\n\n" +
                        "srcPktNums\030\007 \001(\r\022\020\n\010srcBytes\030\010 \001(\004\022\022\n\nds" +
                        "tPktNums\030\t \001(\r\022\020\n\010dstBytes\030\n \001(\004\022\014\n\004vlan" +
                        "\030\013 \001(\r\022\014\n\004host\030\014 \001(\t\022\016\n\006client\030\r \001(\t\022\016\n\006" +
                        "server\030\016 \001(\t\022\016\n\006btHash\030\017 \001(\t\022\014\n\004info\030\020 \001" +
                        "(\t\022\021\n\tstartTime\030\021 \001(\004\022\017\n\007endTIme\030\022 \001(\004\022\017" +
                        "\n\007httpURL\030\023 \001(\t\022\022\n\nhttpMethod\030\024 \001(\t\022\016\n\006s",
                "rcMac\030\025 \001(\t\022\016\n\006dstMac\030\026 \001(\t"
        };
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
                new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
                    public com.google.protobuf.ExtensionRegistry assignDescriptors(
                            com.google.protobuf.Descriptors.FileDescriptor root) {
                        descriptor = root;
                        internal_static_com_handge_bigdata_proto_PacketData_descriptor =
                                getDescriptor().getMessageTypes().get(0);
                        internal_static_com_handge_bigdata_proto_PacketData_fieldAccessorTable = new
                                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_com_handge_bigdata_proto_PacketData_descriptor,
                                new String[]{"IpPorto2Name", "SrcIp", "SrcPort", "DstIp", "DstPort", "Proto", "SrcPktNums", "SrcBytes", "DstPktNums", "DstBytes", "Vlan", "Host", "Client", "Server", "BtHash", "Info", "StartTime", "EndTIme", "HttpURL", "HttpMethod", "SrcMac", "DstMac",});
                        return null;
                    }
                };
        com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[]{
                        }, assigner);
    }

    private Packet() {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {
    }

    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor() {
        return descriptor;
    }

    public interface PacketDataOrBuilder
            extends com.google.protobuf.MessageOrBuilder {

        // optional string ipPorto2Name = 1;

        /**
         * <code>optional string ipPorto2Name = 1;</code>
         * <p>
         * <pre>
         * 传输层协议
         * </pre>
         */
        boolean hasIpPorto2Name();

        /**
         * <code>optional string ipPorto2Name = 1;</code>
         * <p>
         * <pre>
         * 传输层协议
         * </pre>
         */
        String getIpPorto2Name();

        /**
         * <code>optional string ipPorto2Name = 1;</code>
         * <p>
         * <pre>
         * 传输层协议
         * </pre>
         */
        com.google.protobuf.ByteString
        getIpPorto2NameBytes();

        // optional string srcIp = 2;

        /**
         * <code>optional string srcIp = 2;</code>
         * <p>
         * <pre>
         * 源IP
         * </pre>
         */
        boolean hasSrcIp();

        /**
         * <code>optional string srcIp = 2;</code>
         * <p>
         * <pre>
         * 源IP
         * </pre>
         */
        String getSrcIp();

        /**
         * <code>optional string srcIp = 2;</code>
         * <p>
         * <pre>
         * 源IP
         * </pre>
         */
        com.google.protobuf.ByteString
        getSrcIpBytes();

        // optional uint32 srcPort = 3;

        /**
         * <code>optional uint32 srcPort = 3;</code>
         * <p>
         * <pre>
         * 源端口
         * </pre>
         */
        boolean hasSrcPort();

        /**
         * <code>optional uint32 srcPort = 3;</code>
         * <p>
         * <pre>
         * 源端口
         * </pre>
         */
        int getSrcPort();

        // optional string dstIp = 4;

        /**
         * <code>optional string dstIp = 4;</code>
         * <p>
         * <pre>
         * 目的IP
         * </pre>
         */
        boolean hasDstIp();

        /**
         * <code>optional string dstIp = 4;</code>
         * <p>
         * <pre>
         * 目的IP
         * </pre>
         */
        String getDstIp();

        /**
         * <code>optional string dstIp = 4;</code>
         * <p>
         * <pre>
         * 目的IP
         * </pre>
         */
        com.google.protobuf.ByteString
        getDstIpBytes();

        // optional uint32 dstPort = 5;

        /**
         * <code>optional uint32 dstPort = 5;</code>
         * <p>
         * <pre>
         * 目的端口
         * </pre>
         */
        boolean hasDstPort();

        /**
         * <code>optional uint32 dstPort = 5;</code>
         * <p>
         * <pre>
         * 目的端口
         * </pre>
         */
        int getDstPort();

        // optional string proto = 6;

        /**
         * <code>optional string proto = 6;</code>
         * <p>
         * <pre>
         * 应用层协议
         * </pre>
         */
        boolean hasProto();

        /**
         * <code>optional string proto = 6;</code>
         * <p>
         * <pre>
         * 应用层协议
         * </pre>
         */
        String getProto();

        /**
         * <code>optional string proto = 6;</code>
         * <p>
         * <pre>
         * 应用层协议
         * </pre>
         */
        com.google.protobuf.ByteString
        getProtoBytes();

        // optional uint32 srcPktNums = 7;

        /**
         * <code>optional uint32 srcPktNums = 7;</code>
         * <p>
         * <pre>
         * 源数据包个数
         * </pre>
         */
        boolean hasSrcPktNums();

        /**
         * <code>optional uint32 srcPktNums = 7;</code>
         * <p>
         * <pre>
         * 源数据包个数
         * </pre>
         */
        int getSrcPktNums();

        // optional uint64 srcBytes = 8;

        /**
         * <code>optional uint64 srcBytes = 8;</code>
         * <p>
         * <pre>
         * 源数据流量大小
         * </pre>
         */
        boolean hasSrcBytes();

        /**
         * <code>optional uint64 srcBytes = 8;</code>
         * <p>
         * <pre>
         * 源数据流量大小
         * </pre>
         */
        long getSrcBytes();

        // optional uint32 dstPktNums = 9;

        /**
         * <code>optional uint32 dstPktNums = 9;</code>
         * <p>
         * <pre>
         * 目的数据包个数
         * </pre>
         */
        boolean hasDstPktNums();

        /**
         * <code>optional uint32 dstPktNums = 9;</code>
         * <p>
         * <pre>
         * 目的数据包个数
         * </pre>
         */
        int getDstPktNums();

        // optional uint64 dstBytes = 10;

        /**
         * <code>optional uint64 dstBytes = 10;</code>
         * <p>
         * <pre>
         * 目的数据量大小
         * </pre>
         */
        boolean hasDstBytes();

        /**
         * <code>optional uint64 dstBytes = 10;</code>
         * <p>
         * <pre>
         * 目的数据量大小
         * </pre>
         */
        long getDstBytes();

        // optional uint32 vlan = 11;

        /**
         * <code>optional uint32 vlan = 11;</code>
         * <p>
         * <pre>
         * </pre>
         */
        boolean hasVlan();

        /**
         * <code>optional uint32 vlan = 11;</code>
         * <p>
         * <pre>
         * </pre>
         */
        int getVlan();

        // optional string host = 12;

        /**
         * <code>optional string host = 12;</code>
         * <p>
         * <pre>
         * 主机名/IP
         * </pre>
         */
        boolean hasHost();

        /**
         * <code>optional string host = 12;</code>
         * <p>
         * <pre>
         * 主机名/IP
         * </pre>
         */
        String getHost();

        /**
         * <code>optional string host = 12;</code>
         * <p>
         * <pre>
         * 主机名/IP
         * </pre>
         */
        com.google.protobuf.ByteString
        getHostBytes();

        // optional string client = 13;

        /**
         * <code>optional string client = 13;</code>
         * <p>
         * <pre>
         * SSH/SSL客户端
         * </pre>
         */
        boolean hasClient();

        /**
         * <code>optional string client = 13;</code>
         * <p>
         * <pre>
         * SSH/SSL客户端
         * </pre>
         */
        String getClient();

        /**
         * <code>optional string client = 13;</code>
         * <p>
         * <pre>
         * SSH/SSL客户端
         * </pre>
         */
        com.google.protobuf.ByteString
        getClientBytes();

        // optional string server = 14;

        /**
         * <code>optional string server = 14;</code>
         * <p>
         * <pre>
         * SSH/SSL服务端
         * </pre>
         */
        boolean hasServer();

        /**
         * <code>optional string server = 14;</code>
         * <p>
         * <pre>
         * SSH/SSL服务端
         * </pre>
         */
        String getServer();

        /**
         * <code>optional string server = 14;</code>
         * <p>
         * <pre>
         * SSH/SSL服务端
         * </pre>
         */
        com.google.protobuf.ByteString
        getServerBytes();

        // optional string btHash = 15;

        /**
         * <code>optional string btHash = 15;</code>
         * <p>
         * <pre>
         * 比特流hash值
         * </pre>
         */
        boolean hasBtHash();

        /**
         * <code>optional string btHash = 15;</code>
         * <p>
         * <pre>
         * 比特流hash值
         * </pre>
         */
        String getBtHash();

        /**
         * <code>optional string btHash = 15;</code>
         * <p>
         * <pre>
         * 比特流hash值
         * </pre>
         */
        com.google.protobuf.ByteString
        getBtHashBytes();

        // optional string info = 16;

        /**
         * <code>optional string info = 16;</code>
         * <p>
         * <pre>
         * 其他信息
         * </pre>
         */
        boolean hasInfo();

        /**
         * <code>optional string info = 16;</code>
         * <p>
         * <pre>
         * 其他信息
         * </pre>
         */
        String getInfo();

        /**
         * <code>optional string info = 16;</code>
         * <p>
         * <pre>
         * 其他信息
         * </pre>
         */
        com.google.protobuf.ByteString
        getInfoBytes();

        // optional uint64 startTime = 17;

        /**
         * <code>optional uint64 startTime = 17;</code>
         * <p>
         * <pre>
         * 开始时间
         * </pre>
         */
        boolean hasStartTime();

        /**
         * <code>optional uint64 startTime = 17;</code>
         * <p>
         * <pre>
         * 开始时间
         * </pre>
         */
        long getStartTime();

        // optional uint64 endTIme = 18;

        /**
         * <code>optional uint64 endTIme = 18;</code>
         * <p>
         * <pre>
         * 结束时间
         * </pre>
         */
        boolean hasEndTIme();

        /**
         * <code>optional uint64 endTIme = 18;</code>
         * <p>
         * <pre>
         * 结束时间
         * </pre>
         */
        long getEndTIme();

        // optional string httpURL = 19;

        /**
         * <code>optional string httpURL = 19;</code>
         * <p>
         * <pre>
         * httpURL
         * </pre>
         */
        boolean hasHttpURL();

        /**
         * <code>optional string httpURL = 19;</code>
         * <p>
         * <pre>
         * httpURL
         * </pre>
         */
        String getHttpURL();

        /**
         * <code>optional string httpURL = 19;</code>
         * <p>
         * <pre>
         * httpURL
         * </pre>
         */
        com.google.protobuf.ByteString
        getHttpURLBytes();

        // optional string httpMethod = 20;

        /**
         * <code>optional string httpMethod = 20;</code>
         * <p>
         * <pre>
         * httpMethod
         * </pre>
         */
        boolean hasHttpMethod();

        /**
         * <code>optional string httpMethod = 20;</code>
         * <p>
         * <pre>
         * httpMethod
         * </pre>
         */
        String getHttpMethod();

        /**
         * <code>optional string httpMethod = 20;</code>
         * <p>
         * <pre>
         * httpMethod
         * </pre>
         */
        com.google.protobuf.ByteString
        getHttpMethodBytes();

        // optional string srcMac = 21;

        /**
         * <code>optional string srcMac = 21;</code>
         * <p>
         * <pre>
         * 源mac地址
         * </pre>
         */
        boolean hasSrcMac();

        /**
         * <code>optional string srcMac = 21;</code>
         * <p>
         * <pre>
         * 源mac地址
         * </pre>
         */
        String getSrcMac();

        /**
         * <code>optional string srcMac = 21;</code>
         * <p>
         * <pre>
         * 源mac地址
         * </pre>
         */
        com.google.protobuf.ByteString
        getSrcMacBytes();

        // optional string dstMac = 22;

        /**
         * <code>optional string dstMac = 22;</code>
         * <p>
         * <pre>
         * 目的mac地址
         * </pre>
         */
        boolean hasDstMac();

        /**
         * <code>optional string dstMac = 22;</code>
         * <p>
         * <pre>
         * 目的mac地址
         * </pre>
         */
        String getDstMac();

        /**
         * <code>optional string dstMac = 22;</code>
         * <p>
         * <pre>
         * 目的mac地址
         * </pre>
         */
        com.google.protobuf.ByteString
        getDstMacBytes();
    }

    /**
     * Protobuf type {@code com.handge.bigdata.proto.PacketData}
     */
    public static final class PacketData extends
            com.google.protobuf.GeneratedMessage
            implements PacketDataOrBuilder {
        // optional string ipPorto2Name = 1;
        public static final int IPPORTO2NAME_FIELD_NUMBER = 1;
        // optional string srcIp = 2;
        public static final int SRCIP_FIELD_NUMBER = 2;
        // optional uint32 srcPort = 3;
        public static final int SRCPORT_FIELD_NUMBER = 3;
        // optional string dstIp = 4;
        public static final int DSTIP_FIELD_NUMBER = 4;
        // optional uint32 dstPort = 5;
        public static final int DSTPORT_FIELD_NUMBER = 5;
        // optional string proto = 6;
        public static final int PROTO_FIELD_NUMBER = 6;
        // optional uint32 srcPktNums = 7;
        public static final int SRCPKTNUMS_FIELD_NUMBER = 7;
        // optional uint64 srcBytes = 8;
        public static final int SRCBYTES_FIELD_NUMBER = 8;
        // optional uint32 dstPktNums = 9;
        public static final int DSTPKTNUMS_FIELD_NUMBER = 9;
        // optional uint64 dstBytes = 10;
        public static final int DSTBYTES_FIELD_NUMBER = 10;
        // optional uint32 vlan = 11;
        public static final int VLAN_FIELD_NUMBER = 11;
        // optional string host = 12;
        public static final int HOST_FIELD_NUMBER = 12;
        // optional string client = 13;
        public static final int CLIENT_FIELD_NUMBER = 13;
        // optional string server = 14;
        public static final int SERVER_FIELD_NUMBER = 14;
        // optional string btHash = 15;
        public static final int BTHASH_FIELD_NUMBER = 15;
        // optional string info = 16;
        public static final int INFO_FIELD_NUMBER = 16;
        // optional uint64 startTime = 17;
        public static final int STARTTIME_FIELD_NUMBER = 17;
        // optional uint64 endTIme = 18;
        public static final int ENDTIME_FIELD_NUMBER = 18;
        // optional string httpURL = 19;
        public static final int HTTPURL_FIELD_NUMBER = 19;
        // optional string httpMethod = 20;
        public static final int HTTPMETHOD_FIELD_NUMBER = 20;
        // optional string srcMac = 21;
        public static final int SRCMAC_FIELD_NUMBER = 21;
        // optional string dstMac = 22;
        public static final int DSTMAC_FIELD_NUMBER = 22;
        private static final PacketData defaultInstance;
        private static final long serialVersionUID = 0L;
        public static com.google.protobuf.Parser<PacketData> PARSER =
                new com.google.protobuf.AbstractParser<PacketData>() {
                    public PacketData parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new PacketData(input, extensionRegistry);
                    }
                };

        static {
            defaultInstance = new PacketData(true);
            defaultInstance.initFields();
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        private int bitField0_;
        private Object ipPorto2Name_;
        private Object srcIp_;
        private int srcPort_;
        private Object dstIp_;
        private int dstPort_;
        private Object proto_;
        private int srcPktNums_;
        private long srcBytes_;
        private int dstPktNums_;
        private long dstBytes_;
        private int vlan_;
        private Object host_;
        private Object client_;
        private Object server_;
        private Object btHash_;
        private Object info_;
        private long startTime_;
        private long endTIme_;
        private Object httpURL_;
        private Object httpMethod_;
        private Object srcMac_;
        private Object dstMac_;
        private byte memoizedIsInitialized = -1;
        private int memoizedSerializedSize = -1;

        // Use PacketData.newBuilder() to construct.
        private PacketData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private PacketData(boolean noInit) {
            this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        private PacketData(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            bitField0_ |= 0x00000001;
                            ipPorto2Name_ = input.readBytes();
                            break;
                        }
                        case 18: {
                            bitField0_ |= 0x00000002;
                            srcIp_ = input.readBytes();
                            break;
                        }
                        case 24: {
                            bitField0_ |= 0x00000004;
                            srcPort_ = input.readUInt32();
                            break;
                        }
                        case 34: {
                            bitField0_ |= 0x00000008;
                            dstIp_ = input.readBytes();
                            break;
                        }
                        case 40: {
                            bitField0_ |= 0x00000010;
                            dstPort_ = input.readUInt32();
                            break;
                        }
                        case 50: {
                            bitField0_ |= 0x00000020;
                            proto_ = input.readBytes();
                            break;
                        }
                        case 56: {
                            bitField0_ |= 0x00000040;
                            srcPktNums_ = input.readUInt32();
                            break;
                        }
                        case 64: {
                            bitField0_ |= 0x00000080;
                            srcBytes_ = input.readUInt64();
                            break;
                        }
                        case 72: {
                            bitField0_ |= 0x00000100;
                            dstPktNums_ = input.readUInt32();
                            break;
                        }
                        case 80: {
                            bitField0_ |= 0x00000200;
                            dstBytes_ = input.readUInt64();
                            break;
                        }
                        case 88: {
                            bitField0_ |= 0x00000400;
                            vlan_ = input.readUInt32();
                            break;
                        }
                        case 98: {
                            bitField0_ |= 0x00000800;
                            host_ = input.readBytes();
                            break;
                        }
                        case 106: {
                            bitField0_ |= 0x00001000;
                            client_ = input.readBytes();
                            break;
                        }
                        case 114: {
                            bitField0_ |= 0x00002000;
                            server_ = input.readBytes();
                            break;
                        }
                        case 122: {
                            bitField0_ |= 0x00004000;
                            btHash_ = input.readBytes();
                            break;
                        }
                        case 130: {
                            bitField0_ |= 0x00008000;
                            info_ = input.readBytes();
                            break;
                        }
                        case 136: {
                            bitField0_ |= 0x00010000;
                            startTime_ = input.readUInt64();
                            break;
                        }
                        case 144: {
                            bitField0_ |= 0x00020000;
                            endTIme_ = input.readUInt64();
                            break;
                        }
                        case 154: {
                            bitField0_ |= 0x00040000;
                            httpURL_ = input.readBytes();
                            break;
                        }
                        case 162: {
                            bitField0_ |= 0x00080000;
                            httpMethod_ = input.readBytes();
                            break;
                        }
                        case 170: {
                            bitField0_ |= 0x00100000;
                            srcMac_ = input.readBytes();
                            break;
                        }
                        case 178: {
                            bitField0_ |= 0x00200000;
                            dstMac_ = input.readBytes();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static PacketData getDefaultInstance() {
            return defaultInstance;
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return Packet.internal_static_com_handge_bigdata_proto_PacketData_descriptor;
        }

        public static PacketData parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static PacketData parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static PacketData parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static PacketData parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static PacketData parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static PacketData parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static PacketData parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static PacketData parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static PacketData parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static PacketData parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public static Builder newBuilder(PacketData prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public PacketData getDefaultInstanceForType() {
            return defaultInstance;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return Packet.internal_static_com_handge_bigdata_proto_PacketData_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            PacketData.class, Builder.class);
        }

        @Override
        public com.google.protobuf.Parser<PacketData> getParserForType() {
            return PARSER;
        }

        /**
         * <code>optional string ipPorto2Name = 1;</code>
         * <p>
         * <pre>
         * 传输层协议
         * </pre>
         */
        public boolean hasIpPorto2Name() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>optional string ipPorto2Name = 1;</code>
         * <p>
         * <pre>
         * 传输层协议
         * </pre>
         */
        public String getIpPorto2Name() {
            Object ref = ipPorto2Name_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    ipPorto2Name_ = s;
                }
                return s;
            }
        }

        /**
         * <code>optional string ipPorto2Name = 1;</code>
         * <p>
         * <pre>
         * 传输层协议
         * </pre>
         */
        public com.google.protobuf.ByteString
        getIpPorto2NameBytes() {
            Object ref = ipPorto2Name_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                ipPorto2Name_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <code>optional string srcIp = 2;</code>
         * <p>
         * <pre>
         * 源IP
         * </pre>
         */
        public boolean hasSrcIp() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <code>optional string srcIp = 2;</code>
         * <p>
         * <pre>
         * 源IP
         * </pre>
         */
        public String getSrcIp() {
            Object ref = srcIp_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    srcIp_ = s;
                }
                return s;
            }
        }

        /**
         * <code>optional string srcIp = 2;</code>
         * <p>
         * <pre>
         * 源IP
         * </pre>
         */
        public com.google.protobuf.ByteString
        getSrcIpBytes() {
            Object ref = srcIp_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                srcIp_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <code>optional uint32 srcPort = 3;</code>
         * <p>
         * <pre>
         * 源端口
         * </pre>
         */
        public boolean hasSrcPort() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <code>optional uint32 srcPort = 3;</code>
         * <p>
         * <pre>
         * 源端口
         * </pre>
         */
        public int getSrcPort() {
            return srcPort_;
        }

        /**
         * <code>optional string dstIp = 4;</code>
         * <p>
         * <pre>
         * 目的IP
         * </pre>
         */
        public boolean hasDstIp() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <code>optional string dstIp = 4;</code>
         * <p>
         * <pre>
         * 目的IP
         * </pre>
         */
        public String getDstIp() {
            Object ref = dstIp_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    dstIp_ = s;
                }
                return s;
            }
        }

        /**
         * <code>optional string dstIp = 4;</code>
         * <p>
         * <pre>
         * 目的IP
         * </pre>
         */
        public com.google.protobuf.ByteString
        getDstIpBytes() {
            Object ref = dstIp_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                dstIp_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <code>optional uint32 dstPort = 5;</code>
         * <p>
         * <pre>
         * 目的端口
         * </pre>
         */
        public boolean hasDstPort() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
        }

        /**
         * <code>optional uint32 dstPort = 5;</code>
         * <p>
         * <pre>
         * 目的端口
         * </pre>
         */
        public int getDstPort() {
            return dstPort_;
        }

        /**
         * <code>optional string proto = 6;</code>
         * <p>
         * <pre>
         * 应用层协议
         * </pre>
         */
        public boolean hasProto() {
            return ((bitField0_ & 0x00000020) == 0x00000020);
        }

        /**
         * <code>optional string proto = 6;</code>
         * <p>
         * <pre>
         * 应用层协议
         * </pre>
         */
        public String getProto() {
            Object ref = proto_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    proto_ = s;
                }
                return s;
            }
        }

        /**
         * <code>optional string proto = 6;</code>
         * <p>
         * <pre>
         * 应用层协议
         * </pre>
         */
        public com.google.protobuf.ByteString
        getProtoBytes() {
            Object ref = proto_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                proto_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <code>optional uint32 srcPktNums = 7;</code>
         * <p>
         * <pre>
         * 源数据包个数
         * </pre>
         */
        public boolean hasSrcPktNums() {
            return ((bitField0_ & 0x00000040) == 0x00000040);
        }

        /**
         * <code>optional uint32 srcPktNums = 7;</code>
         * <p>
         * <pre>
         * 源数据包个数
         * </pre>
         */
        public int getSrcPktNums() {
            return srcPktNums_;
        }

        /**
         * <code>optional uint64 srcBytes = 8;</code>
         * <p>
         * <pre>
         * 源数据流量大小
         * </pre>
         */
        public boolean hasSrcBytes() {
            return ((bitField0_ & 0x00000080) == 0x00000080);
        }

        /**
         * <code>optional uint64 srcBytes = 8;</code>
         * <p>
         * <pre>
         * 源数据流量大小
         * </pre>
         */
        public long getSrcBytes() {
            return srcBytes_;
        }

        /**
         * <code>optional uint32 dstPktNums = 9;</code>
         * <p>
         * <pre>
         * 目的数据包个数
         * </pre>
         */
        public boolean hasDstPktNums() {
            return ((bitField0_ & 0x00000100) == 0x00000100);
        }

        /**
         * <code>optional uint32 dstPktNums = 9;</code>
         * <p>
         * <pre>
         * 目的数据包个数
         * </pre>
         */
        public int getDstPktNums() {
            return dstPktNums_;
        }

        /**
         * <code>optional uint64 dstBytes = 10;</code>
         * <p>
         * <pre>
         * 目的数据量大小
         * </pre>
         */
        public boolean hasDstBytes() {
            return ((bitField0_ & 0x00000200) == 0x00000200);
        }

        /**
         * <code>optional uint64 dstBytes = 10;</code>
         * <p>
         * <pre>
         * 目的数据量大小
         * </pre>
         */
        public long getDstBytes() {
            return dstBytes_;
        }

        /**
         * <code>optional uint32 vlan = 11;</code>
         * <p>
         * <pre>
         * </pre>
         */
        public boolean hasVlan() {
            return ((bitField0_ & 0x00000400) == 0x00000400);
        }

        /**
         * <code>optional uint32 vlan = 11;</code>
         * <p>
         * <pre>
         * </pre>
         */
        public int getVlan() {
            return vlan_;
        }

        /**
         * <code>optional string host = 12;</code>
         * <p>
         * <pre>
         * 主机名/IP
         * </pre>
         */
        public boolean hasHost() {
            return ((bitField0_ & 0x00000800) == 0x00000800);
        }

        /**
         * <code>optional string host = 12;</code>
         * <p>
         * <pre>
         * 主机名/IP
         * </pre>
         */
        public String getHost() {
            Object ref = host_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    host_ = s;
                }
                return s;
            }
        }

        /**
         * <code>optional string host = 12;</code>
         * <p>
         * <pre>
         * 主机名/IP
         * </pre>
         */
        public com.google.protobuf.ByteString
        getHostBytes() {
            Object ref = host_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                host_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <code>optional string client = 13;</code>
         * <p>
         * <pre>
         * SSH/SSL客户端
         * </pre>
         */
        public boolean hasClient() {
            return ((bitField0_ & 0x00001000) == 0x00001000);
        }

        /**
         * <code>optional string client = 13;</code>
         * <p>
         * <pre>
         * SSH/SSL客户端
         * </pre>
         */
        public String getClient() {
            Object ref = client_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    client_ = s;
                }
                return s;
            }
        }

        /**
         * <code>optional string client = 13;</code>
         * <p>
         * <pre>
         * SSH/SSL客户端
         * </pre>
         */
        public com.google.protobuf.ByteString
        getClientBytes() {
            Object ref = client_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                client_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <code>optional string server = 14;</code>
         * <p>
         * <pre>
         * SSH/SSL服务端
         * </pre>
         */
        public boolean hasServer() {
            return ((bitField0_ & 0x00002000) == 0x00002000);
        }

        /**
         * <code>optional string server = 14;</code>
         * <p>
         * <pre>
         * SSH/SSL服务端
         * </pre>
         */
        public String getServer() {
            Object ref = server_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    server_ = s;
                }
                return s;
            }
        }

        /**
         * <code>optional string server = 14;</code>
         * <p>
         * <pre>
         * SSH/SSL服务端
         * </pre>
         */
        public com.google.protobuf.ByteString
        getServerBytes() {
            Object ref = server_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                server_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <code>optional string btHash = 15;</code>
         * <p>
         * <pre>
         * 比特流hash值
         * </pre>
         */
        public boolean hasBtHash() {
            return ((bitField0_ & 0x00004000) == 0x00004000);
        }

        /**
         * <code>optional string btHash = 15;</code>
         * <p>
         * <pre>
         * 比特流hash值
         * </pre>
         */
        public String getBtHash() {
            Object ref = btHash_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    btHash_ = s;
                }
                return s;
            }
        }

        /**
         * <code>optional string btHash = 15;</code>
         * <p>
         * <pre>
         * 比特流hash值
         * </pre>
         */
        public com.google.protobuf.ByteString
        getBtHashBytes() {
            Object ref = btHash_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                btHash_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <code>optional string info = 16;</code>
         * <p>
         * <pre>
         * 其他信息
         * </pre>
         */
        public boolean hasInfo() {
            return ((bitField0_ & 0x00008000) == 0x00008000);
        }

        /**
         * <code>optional string info = 16;</code>
         * <p>
         * <pre>
         * 其他信息
         * </pre>
         */
        public String getInfo() {
            Object ref = info_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    info_ = s;
                }
                return s;
            }
        }

        /**
         * <code>optional string info = 16;</code>
         * <p>
         * <pre>
         * 其他信息
         * </pre>
         */
        public com.google.protobuf.ByteString
        getInfoBytes() {
            Object ref = info_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                info_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <code>optional uint64 startTime = 17;</code>
         * <p>
         * <pre>
         * 开始时间
         * </pre>
         */
        public boolean hasStartTime() {
            return ((bitField0_ & 0x00010000) == 0x00010000);
        }

        /**
         * <code>optional uint64 startTime = 17;</code>
         * <p>
         * <pre>
         * 开始时间
         * </pre>
         */
        public long getStartTime() {
            return startTime_;
        }

        /**
         * <code>optional uint64 endTIme = 18;</code>
         * <p>
         * <pre>
         * 结束时间
         * </pre>
         */
        public boolean hasEndTIme() {
            return ((bitField0_ & 0x00020000) == 0x00020000);
        }

        /**
         * <code>optional uint64 endTIme = 18;</code>
         * <p>
         * <pre>
         * 结束时间
         * </pre>
         */
        public long getEndTIme() {
            return endTIme_;
        }

        /**
         * <code>optional string httpURL = 19;</code>
         * <p>
         * <pre>
         * httpURL
         * </pre>
         */
        public boolean hasHttpURL() {
            return ((bitField0_ & 0x00040000) == 0x00040000);
        }

        /**
         * <code>optional string httpURL = 19;</code>
         * <p>
         * <pre>
         * httpURL
         * </pre>
         */
        public String getHttpURL() {
            Object ref = httpURL_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    httpURL_ = s;
                }
                return s;
            }
        }

        /**
         * <code>optional string httpURL = 19;</code>
         * <p>
         * <pre>
         * httpURL
         * </pre>
         */
        public com.google.protobuf.ByteString
        getHttpURLBytes() {
            Object ref = httpURL_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                httpURL_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <code>optional string httpMethod = 20;</code>
         * <p>
         * <pre>
         * httpMethod
         * </pre>
         */
        public boolean hasHttpMethod() {
            return ((bitField0_ & 0x00080000) == 0x00080000);
        }

        /**
         * <code>optional string httpMethod = 20;</code>
         * <p>
         * <pre>
         * httpMethod
         * </pre>
         */
        public String getHttpMethod() {
            Object ref = httpMethod_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    httpMethod_ = s;
                }
                return s;
            }
        }

        /**
         * <code>optional string httpMethod = 20;</code>
         * <p>
         * <pre>
         * httpMethod
         * </pre>
         */
        public com.google.protobuf.ByteString
        getHttpMethodBytes() {
            Object ref = httpMethod_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                httpMethod_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <code>optional string srcMac = 21;</code>
         * <p>
         * <pre>
         * 源mac地址
         * </pre>
         */
        public boolean hasSrcMac() {
            return ((bitField0_ & 0x00100000) == 0x00100000);
        }

        /**
         * <code>optional string srcMac = 21;</code>
         * <p>
         * <pre>
         * 源mac地址
         * </pre>
         */
        public String getSrcMac() {
            Object ref = srcMac_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    srcMac_ = s;
                }
                return s;
            }
        }

        /**
         * <code>optional string srcMac = 21;</code>
         * <p>
         * <pre>
         * 源mac地址
         * </pre>
         */
        public com.google.protobuf.ByteString
        getSrcMacBytes() {
            Object ref = srcMac_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                srcMac_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <code>optional string dstMac = 22;</code>
         * <p>
         * <pre>
         * 目的mac地址
         * </pre>
         */
        public boolean hasDstMac() {
            return ((bitField0_ & 0x00200000) == 0x00200000);
        }

        /**
         * <code>optional string dstMac = 22;</code>
         * <p>
         * <pre>
         * 目的mac地址
         * </pre>
         */
        public String getDstMac() {
            Object ref = dstMac_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    dstMac_ = s;
                }
                return s;
            }
        }

        /**
         * <code>optional string dstMac = 22;</code>
         * <p>
         * <pre>
         * 目的mac地址
         * </pre>
         */
        public com.google.protobuf.ByteString
        getDstMacBytes() {
            Object ref = dstMac_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                dstMac_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        private void initFields() {
            ipPorto2Name_ = "";
            srcIp_ = "";
            srcPort_ = 0;
            dstIp_ = "";
            dstPort_ = 0;
            proto_ = "";
            srcPktNums_ = 0;
            srcBytes_ = 0L;
            dstPktNums_ = 0;
            dstBytes_ = 0L;
            vlan_ = 0;
            host_ = "";
            client_ = "";
            server_ = "";
            btHash_ = "";
            info_ = "";
            startTime_ = 0L;
            endTIme_ = 0L;
            httpURL_ = "";
            httpMethod_ = "";
            srcMac_ = "";
            dstMac_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeBytes(1, getIpPorto2NameBytes());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeBytes(2, getSrcIpBytes());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeUInt32(3, srcPort_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeBytes(4, getDstIpBytes());
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeUInt32(5, dstPort_);
            }
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
                output.writeBytes(6, getProtoBytes());
            }
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
                output.writeUInt32(7, srcPktNums_);
            }
            if (((bitField0_ & 0x00000080) == 0x00000080)) {
                output.writeUInt64(8, srcBytes_);
            }
            if (((bitField0_ & 0x00000100) == 0x00000100)) {
                output.writeUInt32(9, dstPktNums_);
            }
            if (((bitField0_ & 0x00000200) == 0x00000200)) {
                output.writeUInt64(10, dstBytes_);
            }
            if (((bitField0_ & 0x00000400) == 0x00000400)) {
                output.writeUInt32(11, vlan_);
            }
            if (((bitField0_ & 0x00000800) == 0x00000800)) {
                output.writeBytes(12, getHostBytes());
            }
            if (((bitField0_ & 0x00001000) == 0x00001000)) {
                output.writeBytes(13, getClientBytes());
            }
            if (((bitField0_ & 0x00002000) == 0x00002000)) {
                output.writeBytes(14, getServerBytes());
            }
            if (((bitField0_ & 0x00004000) == 0x00004000)) {
                output.writeBytes(15, getBtHashBytes());
            }
            if (((bitField0_ & 0x00008000) == 0x00008000)) {
                output.writeBytes(16, getInfoBytes());
            }
            if (((bitField0_ & 0x00010000) == 0x00010000)) {
                output.writeUInt64(17, startTime_);
            }
            if (((bitField0_ & 0x00020000) == 0x00020000)) {
                output.writeUInt64(18, endTIme_);
            }
            if (((bitField0_ & 0x00040000) == 0x00040000)) {
                output.writeBytes(19, getHttpURLBytes());
            }
            if (((bitField0_ & 0x00080000) == 0x00080000)) {
                output.writeBytes(20, getHttpMethodBytes());
            }
            if (((bitField0_ & 0x00100000) == 0x00100000)) {
                output.writeBytes(21, getSrcMacBytes());
            }
            if (((bitField0_ & 0x00200000) == 0x00200000)) {
                output.writeBytes(22, getDstMacBytes());
            }
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(1, getIpPorto2NameBytes());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(2, getSrcIpBytes());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(3, srcPort_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(4, getDstIpBytes());
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(5, dstPort_);
            }
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(6, getProtoBytes());
            }
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(7, srcPktNums_);
            }
            if (((bitField0_ & 0x00000080) == 0x00000080)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(8, srcBytes_);
            }
            if (((bitField0_ & 0x00000100) == 0x00000100)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(9, dstPktNums_);
            }
            if (((bitField0_ & 0x00000200) == 0x00000200)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(10, dstBytes_);
            }
            if (((bitField0_ & 0x00000400) == 0x00000400)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(11, vlan_);
            }
            if (((bitField0_ & 0x00000800) == 0x00000800)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(12, getHostBytes());
            }
            if (((bitField0_ & 0x00001000) == 0x00001000)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(13, getClientBytes());
            }
            if (((bitField0_ & 0x00002000) == 0x00002000)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(14, getServerBytes());
            }
            if (((bitField0_ & 0x00004000) == 0x00004000)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(15, getBtHashBytes());
            }
            if (((bitField0_ & 0x00008000) == 0x00008000)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(16, getInfoBytes());
            }
            if (((bitField0_ & 0x00010000) == 0x00010000)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(17, startTime_);
            }
            if (((bitField0_ & 0x00020000) == 0x00020000)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(18, endTIme_);
            }
            if (((bitField0_ & 0x00040000) == 0x00040000)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(19, getHttpURLBytes());
            }
            if (((bitField0_ & 0x00080000) == 0x00080000)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(20, getHttpMethodBytes());
            }
            if (((bitField0_ & 0x00100000) == 0x00100000)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(21, getSrcMacBytes());
            }
            if (((bitField0_ & 0x00200000) == 0x00200000)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(22, getDstMacBytes());
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        @Override
        protected Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * Protobuf type {@code com.handge.bigdata.proto.PacketData}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder>
                implements PacketDataOrBuilder {
            private int bitField0_;
            // optional string ipPorto2Name = 1;
            private Object ipPorto2Name_ = "";
            // optional string srcIp = 2;
            private Object srcIp_ = "";
            // optional uint32 srcPort = 3;
            private int srcPort_;
            // optional string dstIp = 4;
            private Object dstIp_ = "";
            // optional uint32 dstPort = 5;
            private int dstPort_;
            // optional string proto = 6;
            private Object proto_ = "";
            // optional uint32 srcPktNums = 7;
            private int srcPktNums_;
            // optional uint64 srcBytes = 8;
            private long srcBytes_;
            // optional uint32 dstPktNums = 9;
            private int dstPktNums_;
            // optional uint64 dstBytes = 10;
            private long dstBytes_;
            // optional uint32 vlan = 11;
            private int vlan_;
            // optional string host = 12;
            private Object host_ = "";
            // optional string client = 13;
            private Object client_ = "";
            // optional string server = 14;
            private Object server_ = "";
            // optional string btHash = 15;
            private Object btHash_ = "";
            // optional string info = 16;
            private Object info_ = "";
            // optional uint64 startTime = 17;
            private long startTime_;
            // optional uint64 endTIme = 18;
            private long endTIme_;
            // optional string httpURL = 19;
            private Object httpURL_ = "";
            // optional string httpMethod = 20;
            private Object httpMethod_ = "";
            // optional string srcMac = 21;
            private Object srcMac_ = "";
            // optional string dstMac = 22;
            private Object dstMac_ = "";

            // Construct using com.handge.bigdata.proto.Packet.PacketData.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return Packet.internal_static_com_handge_bigdata_proto_PacketData_descriptor;
            }

            private static Builder create() {
                return new Builder();
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return Packet.internal_static_com_handge_bigdata_proto_PacketData_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                PacketData.class, Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                ipPorto2Name_ = "";
                bitField0_ = (bitField0_ & ~0x00000001);
                srcIp_ = "";
                bitField0_ = (bitField0_ & ~0x00000002);
                srcPort_ = 0;
                bitField0_ = (bitField0_ & ~0x00000004);
                dstIp_ = "";
                bitField0_ = (bitField0_ & ~0x00000008);
                dstPort_ = 0;
                bitField0_ = (bitField0_ & ~0x00000010);
                proto_ = "";
                bitField0_ = (bitField0_ & ~0x00000020);
                srcPktNums_ = 0;
                bitField0_ = (bitField0_ & ~0x00000040);
                srcBytes_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000080);
                dstPktNums_ = 0;
                bitField0_ = (bitField0_ & ~0x00000100);
                dstBytes_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000200);
                vlan_ = 0;
                bitField0_ = (bitField0_ & ~0x00000400);
                host_ = "";
                bitField0_ = (bitField0_ & ~0x00000800);
                client_ = "";
                bitField0_ = (bitField0_ & ~0x00001000);
                server_ = "";
                bitField0_ = (bitField0_ & ~0x00002000);
                btHash_ = "";
                bitField0_ = (bitField0_ & ~0x00004000);
                info_ = "";
                bitField0_ = (bitField0_ & ~0x00008000);
                startTime_ = 0L;
                bitField0_ = (bitField0_ & ~0x00010000);
                endTIme_ = 0L;
                bitField0_ = (bitField0_ & ~0x00020000);
                httpURL_ = "";
                bitField0_ = (bitField0_ & ~0x00040000);
                httpMethod_ = "";
                bitField0_ = (bitField0_ & ~0x00080000);
                srcMac_ = "";
                bitField0_ = (bitField0_ & ~0x00100000);
                dstMac_ = "";
                bitField0_ = (bitField0_ & ~0x00200000);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return Packet.internal_static_com_handge_bigdata_proto_PacketData_descriptor;
            }

            public PacketData getDefaultInstanceForType() {
                return PacketData.getDefaultInstance();
            }

            public PacketData build() {
                PacketData result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public PacketData buildPartial() {
                PacketData result = new PacketData(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.ipPorto2Name_ = ipPorto2Name_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.srcIp_ = srcIp_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.srcPort_ = srcPort_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.dstIp_ = dstIp_;
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                result.dstPort_ = dstPort_;
                if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
                    to_bitField0_ |= 0x00000020;
                }
                result.proto_ = proto_;
                if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
                    to_bitField0_ |= 0x00000040;
                }
                result.srcPktNums_ = srcPktNums_;
                if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
                    to_bitField0_ |= 0x00000080;
                }
                result.srcBytes_ = srcBytes_;
                if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
                    to_bitField0_ |= 0x00000100;
                }
                result.dstPktNums_ = dstPktNums_;
                if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
                    to_bitField0_ |= 0x00000200;
                }
                result.dstBytes_ = dstBytes_;
                if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
                    to_bitField0_ |= 0x00000400;
                }
                result.vlan_ = vlan_;
                if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
                    to_bitField0_ |= 0x00000800;
                }
                result.host_ = host_;
                if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
                    to_bitField0_ |= 0x00001000;
                }
                result.client_ = client_;
                if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
                    to_bitField0_ |= 0x00002000;
                }
                result.server_ = server_;
                if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
                    to_bitField0_ |= 0x00004000;
                }
                result.btHash_ = btHash_;
                if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
                    to_bitField0_ |= 0x00008000;
                }
                result.info_ = info_;
                if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
                    to_bitField0_ |= 0x00010000;
                }
                result.startTime_ = startTime_;
                if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
                    to_bitField0_ |= 0x00020000;
                }
                result.endTIme_ = endTIme_;
                if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
                    to_bitField0_ |= 0x00040000;
                }
                result.httpURL_ = httpURL_;
                if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
                    to_bitField0_ |= 0x00080000;
                }
                result.httpMethod_ = httpMethod_;
                if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
                    to_bitField0_ |= 0x00100000;
                }
                result.srcMac_ = srcMac_;
                if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
                    to_bitField0_ |= 0x00200000;
                }
                result.dstMac_ = dstMac_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof PacketData) {
                    return mergeFrom((PacketData) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(PacketData other) {
                if (other == PacketData.getDefaultInstance()) return this;
                if (other.hasIpPorto2Name()) {
                    bitField0_ |= 0x00000001;
                    ipPorto2Name_ = other.ipPorto2Name_;
                    onChanged();
                }
                if (other.hasSrcIp()) {
                    bitField0_ |= 0x00000002;
                    srcIp_ = other.srcIp_;
                    onChanged();
                }
                if (other.hasSrcPort()) {
                    setSrcPort(other.getSrcPort());
                }
                if (other.hasDstIp()) {
                    bitField0_ |= 0x00000008;
                    dstIp_ = other.dstIp_;
                    onChanged();
                }
                if (other.hasDstPort()) {
                    setDstPort(other.getDstPort());
                }
                if (other.hasProto()) {
                    bitField0_ |= 0x00000020;
                    proto_ = other.proto_;
                    onChanged();
                }
                if (other.hasSrcPktNums()) {
                    setSrcPktNums(other.getSrcPktNums());
                }
                if (other.hasSrcBytes()) {
                    setSrcBytes(other.getSrcBytes());
                }
                if (other.hasDstPktNums()) {
                    setDstPktNums(other.getDstPktNums());
                }
                if (other.hasDstBytes()) {
                    setDstBytes(other.getDstBytes());
                }
                if (other.hasVlan()) {
                    setVlan(other.getVlan());
                }
                if (other.hasHost()) {
                    bitField0_ |= 0x00000800;
                    host_ = other.host_;
                    onChanged();
                }
                if (other.hasClient()) {
                    bitField0_ |= 0x00001000;
                    client_ = other.client_;
                    onChanged();
                }
                if (other.hasServer()) {
                    bitField0_ |= 0x00002000;
                    server_ = other.server_;
                    onChanged();
                }
                if (other.hasBtHash()) {
                    bitField0_ |= 0x00004000;
                    btHash_ = other.btHash_;
                    onChanged();
                }
                if (other.hasInfo()) {
                    bitField0_ |= 0x00008000;
                    info_ = other.info_;
                    onChanged();
                }
                if (other.hasStartTime()) {
                    setStartTime(other.getStartTime());
                }
                if (other.hasEndTIme()) {
                    setEndTIme(other.getEndTIme());
                }
                if (other.hasHttpURL()) {
                    bitField0_ |= 0x00040000;
                    httpURL_ = other.httpURL_;
                    onChanged();
                }
                if (other.hasHttpMethod()) {
                    bitField0_ |= 0x00080000;
                    httpMethod_ = other.httpMethod_;
                    onChanged();
                }
                if (other.hasSrcMac()) {
                    bitField0_ |= 0x00100000;
                    srcMac_ = other.srcMac_;
                    onChanged();
                }
                if (other.hasDstMac()) {
                    bitField0_ |= 0x00200000;
                    dstMac_ = other.dstMac_;
                    onChanged();
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                PacketData parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (PacketData) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <code>optional string ipPorto2Name = 1;</code>
             * <p>
             * <pre>
             * 传输层协议
             * </pre>
             */
            public boolean hasIpPorto2Name() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>optional string ipPorto2Name = 1;</code>
             * <p>
             * <pre>
             * 传输层协议
             * </pre>
             */
            public String getIpPorto2Name() {
                Object ref = ipPorto2Name_;
                if (!(ref instanceof String)) {
                    String s = ((com.google.protobuf.ByteString) ref)
                            .toStringUtf8();
                    ipPorto2Name_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <code>optional string ipPorto2Name = 1;</code>
             * <p>
             * <pre>
             * 传输层协议
             * </pre>
             */
            public Builder setIpPorto2Name(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                ipPorto2Name_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string ipPorto2Name = 1;</code>
             * <p>
             * <pre>
             * 传输层协议
             * </pre>
             */
            public com.google.protobuf.ByteString
            getIpPorto2NameBytes() {
                Object ref = ipPorto2Name_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    ipPorto2Name_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>optional string ipPorto2Name = 1;</code>
             * <p>
             * <pre>
             * 传输层协议
             * </pre>
             */
            public Builder setIpPorto2NameBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                ipPorto2Name_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string ipPorto2Name = 1;</code>
             * <p>
             * <pre>
             * 传输层协议
             * </pre>
             */
            public Builder clearIpPorto2Name() {
                bitField0_ = (bitField0_ & ~0x00000001);
                ipPorto2Name_ = getDefaultInstance().getIpPorto2Name();
                onChanged();
                return this;
            }

            /**
             * <code>optional string srcIp = 2;</code>
             * <p>
             * <pre>
             * 源IP
             * </pre>
             */
            public boolean hasSrcIp() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <code>optional string srcIp = 2;</code>
             * <p>
             * <pre>
             * 源IP
             * </pre>
             */
            public String getSrcIp() {
                Object ref = srcIp_;
                if (!(ref instanceof String)) {
                    String s = ((com.google.protobuf.ByteString) ref)
                            .toStringUtf8();
                    srcIp_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <code>optional string srcIp = 2;</code>
             * <p>
             * <pre>
             * 源IP
             * </pre>
             */
            public Builder setSrcIp(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                srcIp_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string srcIp = 2;</code>
             * <p>
             * <pre>
             * 源IP
             * </pre>
             */
            public com.google.protobuf.ByteString
            getSrcIpBytes() {
                Object ref = srcIp_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    srcIp_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>optional string srcIp = 2;</code>
             * <p>
             * <pre>
             * 源IP
             * </pre>
             */
            public Builder setSrcIpBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                srcIp_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string srcIp = 2;</code>
             * <p>
             * <pre>
             * 源IP
             * </pre>
             */
            public Builder clearSrcIp() {
                bitField0_ = (bitField0_ & ~0x00000002);
                srcIp_ = getDefaultInstance().getSrcIp();
                onChanged();
                return this;
            }

            /**
             * <code>optional uint32 srcPort = 3;</code>
             * <p>
             * <pre>
             * 源端口
             * </pre>
             */
            public boolean hasSrcPort() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <code>optional uint32 srcPort = 3;</code>
             * <p>
             * <pre>
             * 源端口
             * </pre>
             */
            public int getSrcPort() {
                return srcPort_;
            }

            /**
             * <code>optional uint32 srcPort = 3;</code>
             * <p>
             * <pre>
             * 源端口
             * </pre>
             */
            public Builder setSrcPort(int value) {
                bitField0_ |= 0x00000004;
                srcPort_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional uint32 srcPort = 3;</code>
             * <p>
             * <pre>
             * 源端口
             * </pre>
             */
            public Builder clearSrcPort() {
                bitField0_ = (bitField0_ & ~0x00000004);
                srcPort_ = 0;
                onChanged();
                return this;
            }

            /**
             * <code>optional string dstIp = 4;</code>
             * <p>
             * <pre>
             * 目的IP
             * </pre>
             */
            public boolean hasDstIp() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <code>optional string dstIp = 4;</code>
             * <p>
             * <pre>
             * 目的IP
             * </pre>
             */
            public String getDstIp() {
                Object ref = dstIp_;
                if (!(ref instanceof String)) {
                    String s = ((com.google.protobuf.ByteString) ref)
                            .toStringUtf8();
                    dstIp_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <code>optional string dstIp = 4;</code>
             * <p>
             * <pre>
             * 目的IP
             * </pre>
             */
            public Builder setDstIp(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000008;
                dstIp_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string dstIp = 4;</code>
             * <p>
             * <pre>
             * 目的IP
             * </pre>
             */
            public com.google.protobuf.ByteString
            getDstIpBytes() {
                Object ref = dstIp_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    dstIp_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>optional string dstIp = 4;</code>
             * <p>
             * <pre>
             * 目的IP
             * </pre>
             */
            public Builder setDstIpBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000008;
                dstIp_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string dstIp = 4;</code>
             * <p>
             * <pre>
             * 目的IP
             * </pre>
             */
            public Builder clearDstIp() {
                bitField0_ = (bitField0_ & ~0x00000008);
                dstIp_ = getDefaultInstance().getDstIp();
                onChanged();
                return this;
            }

            /**
             * <code>optional uint32 dstPort = 5;</code>
             * <p>
             * <pre>
             * 目的端口
             * </pre>
             */
            public boolean hasDstPort() {
                return ((bitField0_ & 0x00000010) == 0x00000010);
            }

            /**
             * <code>optional uint32 dstPort = 5;</code>
             * <p>
             * <pre>
             * 目的端口
             * </pre>
             */
            public int getDstPort() {
                return dstPort_;
            }

            /**
             * <code>optional uint32 dstPort = 5;</code>
             * <p>
             * <pre>
             * 目的端口
             * </pre>
             */
            public Builder setDstPort(int value) {
                bitField0_ |= 0x00000010;
                dstPort_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional uint32 dstPort = 5;</code>
             * <p>
             * <pre>
             * 目的端口
             * </pre>
             */
            public Builder clearDstPort() {
                bitField0_ = (bitField0_ & ~0x00000010);
                dstPort_ = 0;
                onChanged();
                return this;
            }

            /**
             * <code>optional string proto = 6;</code>
             * <p>
             * <pre>
             * 应用层协议
             * </pre>
             */
            public boolean hasProto() {
                return ((bitField0_ & 0x00000020) == 0x00000020);
            }

            /**
             * <code>optional string proto = 6;</code>
             * <p>
             * <pre>
             * 应用层协议
             * </pre>
             */
            public String getProto() {
                Object ref = proto_;
                if (!(ref instanceof String)) {
                    String s = ((com.google.protobuf.ByteString) ref)
                            .toStringUtf8();
                    proto_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <code>optional string proto = 6;</code>
             * <p>
             * <pre>
             * 应用层协议
             * </pre>
             */
            public Builder setProto(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000020;
                proto_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string proto = 6;</code>
             * <p>
             * <pre>
             * 应用层协议
             * </pre>
             */
            public com.google.protobuf.ByteString
            getProtoBytes() {
                Object ref = proto_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    proto_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>optional string proto = 6;</code>
             * <p>
             * <pre>
             * 应用层协议
             * </pre>
             */
            public Builder setProtoBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000020;
                proto_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string proto = 6;</code>
             * <p>
             * <pre>
             * 应用层协议
             * </pre>
             */
            public Builder clearProto() {
                bitField0_ = (bitField0_ & ~0x00000020);
                proto_ = getDefaultInstance().getProto();
                onChanged();
                return this;
            }

            /**
             * <code>optional uint32 srcPktNums = 7;</code>
             * <p>
             * <pre>
             * 源数据包个数
             * </pre>
             */
            public boolean hasSrcPktNums() {
                return ((bitField0_ & 0x00000040) == 0x00000040);
            }

            /**
             * <code>optional uint32 srcPktNums = 7;</code>
             * <p>
             * <pre>
             * 源数据包个数
             * </pre>
             */
            public int getSrcPktNums() {
                return srcPktNums_;
            }

            /**
             * <code>optional uint32 srcPktNums = 7;</code>
             * <p>
             * <pre>
             * 源数据包个数
             * </pre>
             */
            public Builder setSrcPktNums(int value) {
                bitField0_ |= 0x00000040;
                srcPktNums_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional uint32 srcPktNums = 7;</code>
             * <p>
             * <pre>
             * 源数据包个数
             * </pre>
             */
            public Builder clearSrcPktNums() {
                bitField0_ = (bitField0_ & ~0x00000040);
                srcPktNums_ = 0;
                onChanged();
                return this;
            }

            /**
             * <code>optional uint64 srcBytes = 8;</code>
             * <p>
             * <pre>
             * 源数据流量大小
             * </pre>
             */
            public boolean hasSrcBytes() {
                return ((bitField0_ & 0x00000080) == 0x00000080);
            }

            /**
             * <code>optional uint64 srcBytes = 8;</code>
             * <p>
             * <pre>
             * 源数据流量大小
             * </pre>
             */
            public long getSrcBytes() {
                return srcBytes_;
            }

            /**
             * <code>optional uint64 srcBytes = 8;</code>
             * <p>
             * <pre>
             * 源数据流量大小
             * </pre>
             */
            public Builder setSrcBytes(long value) {
                bitField0_ |= 0x00000080;
                srcBytes_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional uint64 srcBytes = 8;</code>
             * <p>
             * <pre>
             * 源数据流量大小
             * </pre>
             */
            public Builder clearSrcBytes() {
                bitField0_ = (bitField0_ & ~0x00000080);
                srcBytes_ = 0L;
                onChanged();
                return this;
            }

            /**
             * <code>optional uint32 dstPktNums = 9;</code>
             * <p>
             * <pre>
             * 目的数据包个数
             * </pre>
             */
            public boolean hasDstPktNums() {
                return ((bitField0_ & 0x00000100) == 0x00000100);
            }

            /**
             * <code>optional uint32 dstPktNums = 9;</code>
             * <p>
             * <pre>
             * 目的数据包个数
             * </pre>
             */
            public int getDstPktNums() {
                return dstPktNums_;
            }

            /**
             * <code>optional uint32 dstPktNums = 9;</code>
             * <p>
             * <pre>
             * 目的数据包个数
             * </pre>
             */
            public Builder setDstPktNums(int value) {
                bitField0_ |= 0x00000100;
                dstPktNums_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional uint32 dstPktNums = 9;</code>
             * <p>
             * <pre>
             * 目的数据包个数
             * </pre>
             */
            public Builder clearDstPktNums() {
                bitField0_ = (bitField0_ & ~0x00000100);
                dstPktNums_ = 0;
                onChanged();
                return this;
            }

            /**
             * <code>optional uint64 dstBytes = 10;</code>
             * <p>
             * <pre>
             * 目的数据量大小
             * </pre>
             */
            public boolean hasDstBytes() {
                return ((bitField0_ & 0x00000200) == 0x00000200);
            }

            /**
             * <code>optional uint64 dstBytes = 10;</code>
             * <p>
             * <pre>
             * 目的数据量大小
             * </pre>
             */
            public long getDstBytes() {
                return dstBytes_;
            }

            /**
             * <code>optional uint64 dstBytes = 10;</code>
             * <p>
             * <pre>
             * 目的数据量大小
             * </pre>
             */
            public Builder setDstBytes(long value) {
                bitField0_ |= 0x00000200;
                dstBytes_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional uint64 dstBytes = 10;</code>
             * <p>
             * <pre>
             * 目的数据量大小
             * </pre>
             */
            public Builder clearDstBytes() {
                bitField0_ = (bitField0_ & ~0x00000200);
                dstBytes_ = 0L;
                onChanged();
                return this;
            }

            /**
             * <code>optional uint32 vlan = 11;</code>
             * <p>
             * <pre>
             * </pre>
             */
            public boolean hasVlan() {
                return ((bitField0_ & 0x00000400) == 0x00000400);
            }

            /**
             * <code>optional uint32 vlan = 11;</code>
             * <p>
             * <pre>
             * </pre>
             */
            public int getVlan() {
                return vlan_;
            }

            /**
             * <code>optional uint32 vlan = 11;</code>
             * <p>
             * <pre>
             * </pre>
             */
            public Builder setVlan(int value) {
                bitField0_ |= 0x00000400;
                vlan_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional uint32 vlan = 11;</code>
             * <p>
             * <pre>
             * </pre>
             */
            public Builder clearVlan() {
                bitField0_ = (bitField0_ & ~0x00000400);
                vlan_ = 0;
                onChanged();
                return this;
            }

            /**
             * <code>optional string host = 12;</code>
             * <p>
             * <pre>
             * 主机名/IP
             * </pre>
             */
            public boolean hasHost() {
                return ((bitField0_ & 0x00000800) == 0x00000800);
            }

            /**
             * <code>optional string host = 12;</code>
             * <p>
             * <pre>
             * 主机名/IP
             * </pre>
             */
            public String getHost() {
                Object ref = host_;
                if (!(ref instanceof String)) {
                    String s = ((com.google.protobuf.ByteString) ref)
                            .toStringUtf8();
                    host_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <code>optional string host = 12;</code>
             * <p>
             * <pre>
             * 主机名/IP
             * </pre>
             */
            public Builder setHost(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000800;
                host_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string host = 12;</code>
             * <p>
             * <pre>
             * 主机名/IP
             * </pre>
             */
            public com.google.protobuf.ByteString
            getHostBytes() {
                Object ref = host_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    host_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>optional string host = 12;</code>
             * <p>
             * <pre>
             * 主机名/IP
             * </pre>
             */
            public Builder setHostBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000800;
                host_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string host = 12;</code>
             * <p>
             * <pre>
             * 主机名/IP
             * </pre>
             */
            public Builder clearHost() {
                bitField0_ = (bitField0_ & ~0x00000800);
                host_ = getDefaultInstance().getHost();
                onChanged();
                return this;
            }

            /**
             * <code>optional string client = 13;</code>
             * <p>
             * <pre>
             * SSH/SSL客户端
             * </pre>
             */
            public boolean hasClient() {
                return ((bitField0_ & 0x00001000) == 0x00001000);
            }

            /**
             * <code>optional string client = 13;</code>
             * <p>
             * <pre>
             * SSH/SSL客户端
             * </pre>
             */
            public String getClient() {
                Object ref = client_;
                if (!(ref instanceof String)) {
                    String s = ((com.google.protobuf.ByteString) ref)
                            .toStringUtf8();
                    client_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <code>optional string client = 13;</code>
             * <p>
             * <pre>
             * SSH/SSL客户端
             * </pre>
             */
            public Builder setClient(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00001000;
                client_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string client = 13;</code>
             * <p>
             * <pre>
             * SSH/SSL客户端
             * </pre>
             */
            public com.google.protobuf.ByteString
            getClientBytes() {
                Object ref = client_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    client_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>optional string client = 13;</code>
             * <p>
             * <pre>
             * SSH/SSL客户端
             * </pre>
             */
            public Builder setClientBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00001000;
                client_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string client = 13;</code>
             * <p>
             * <pre>
             * SSH/SSL客户端
             * </pre>
             */
            public Builder clearClient() {
                bitField0_ = (bitField0_ & ~0x00001000);
                client_ = getDefaultInstance().getClient();
                onChanged();
                return this;
            }

            /**
             * <code>optional string server = 14;</code>
             * <p>
             * <pre>
             * SSH/SSL服务端
             * </pre>
             */
            public boolean hasServer() {
                return ((bitField0_ & 0x00002000) == 0x00002000);
            }

            /**
             * <code>optional string server = 14;</code>
             * <p>
             * <pre>
             * SSH/SSL服务端
             * </pre>
             */
            public String getServer() {
                Object ref = server_;
                if (!(ref instanceof String)) {
                    String s = ((com.google.protobuf.ByteString) ref)
                            .toStringUtf8();
                    server_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <code>optional string server = 14;</code>
             * <p>
             * <pre>
             * SSH/SSL服务端
             * </pre>
             */
            public Builder setServer(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00002000;
                server_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string server = 14;</code>
             * <p>
             * <pre>
             * SSH/SSL服务端
             * </pre>
             */
            public com.google.protobuf.ByteString
            getServerBytes() {
                Object ref = server_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    server_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>optional string server = 14;</code>
             * <p>
             * <pre>
             * SSH/SSL服务端
             * </pre>
             */
            public Builder setServerBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00002000;
                server_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string server = 14;</code>
             * <p>
             * <pre>
             * SSH/SSL服务端
             * </pre>
             */
            public Builder clearServer() {
                bitField0_ = (bitField0_ & ~0x00002000);
                server_ = getDefaultInstance().getServer();
                onChanged();
                return this;
            }

            /**
             * <code>optional string btHash = 15;</code>
             * <p>
             * <pre>
             * 比特流hash值
             * </pre>
             */
            public boolean hasBtHash() {
                return ((bitField0_ & 0x00004000) == 0x00004000);
            }

            /**
             * <code>optional string btHash = 15;</code>
             * <p>
             * <pre>
             * 比特流hash值
             * </pre>
             */
            public String getBtHash() {
                Object ref = btHash_;
                if (!(ref instanceof String)) {
                    String s = ((com.google.protobuf.ByteString) ref)
                            .toStringUtf8();
                    btHash_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <code>optional string btHash = 15;</code>
             * <p>
             * <pre>
             * 比特流hash值
             * </pre>
             */
            public Builder setBtHash(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00004000;
                btHash_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string btHash = 15;</code>
             * <p>
             * <pre>
             * 比特流hash值
             * </pre>
             */
            public com.google.protobuf.ByteString
            getBtHashBytes() {
                Object ref = btHash_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    btHash_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>optional string btHash = 15;</code>
             * <p>
             * <pre>
             * 比特流hash值
             * </pre>
             */
            public Builder setBtHashBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00004000;
                btHash_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string btHash = 15;</code>
             * <p>
             * <pre>
             * 比特流hash值
             * </pre>
             */
            public Builder clearBtHash() {
                bitField0_ = (bitField0_ & ~0x00004000);
                btHash_ = getDefaultInstance().getBtHash();
                onChanged();
                return this;
            }

            /**
             * <code>optional string info = 16;</code>
             * <p>
             * <pre>
             * 其他信息
             * </pre>
             */
            public boolean hasInfo() {
                return ((bitField0_ & 0x00008000) == 0x00008000);
            }

            /**
             * <code>optional string info = 16;</code>
             * <p>
             * <pre>
             * 其他信息
             * </pre>
             */
            public String getInfo() {
                Object ref = info_;
                if (!(ref instanceof String)) {
                    String s = ((com.google.protobuf.ByteString) ref)
                            .toStringUtf8();
                    info_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <code>optional string info = 16;</code>
             * <p>
             * <pre>
             * 其他信息
             * </pre>
             */
            public Builder setInfo(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00008000;
                info_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string info = 16;</code>
             * <p>
             * <pre>
             * 其他信息
             * </pre>
             */
            public com.google.protobuf.ByteString
            getInfoBytes() {
                Object ref = info_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    info_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>optional string info = 16;</code>
             * <p>
             * <pre>
             * 其他信息
             * </pre>
             */
            public Builder setInfoBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00008000;
                info_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string info = 16;</code>
             * <p>
             * <pre>
             * 其他信息
             * </pre>
             */
            public Builder clearInfo() {
                bitField0_ = (bitField0_ & ~0x00008000);
                info_ = getDefaultInstance().getInfo();
                onChanged();
                return this;
            }

            /**
             * <code>optional uint64 startTime = 17;</code>
             * <p>
             * <pre>
             * 开始时间
             * </pre>
             */
            public boolean hasStartTime() {
                return ((bitField0_ & 0x00010000) == 0x00010000);
            }

            /**
             * <code>optional uint64 startTime = 17;</code>
             * <p>
             * <pre>
             * 开始时间
             * </pre>
             */
            public long getStartTime() {
                return startTime_;
            }

            /**
             * <code>optional uint64 startTime = 17;</code>
             * <p>
             * <pre>
             * 开始时间
             * </pre>
             */
            public Builder setStartTime(long value) {
                bitField0_ |= 0x00010000;
                startTime_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional uint64 startTime = 17;</code>
             * <p>
             * <pre>
             * 开始时间
             * </pre>
             */
            public Builder clearStartTime() {
                bitField0_ = (bitField0_ & ~0x00010000);
                startTime_ = 0L;
                onChanged();
                return this;
            }

            /**
             * <code>optional uint64 endTIme = 18;</code>
             * <p>
             * <pre>
             * 结束时间
             * </pre>
             */
            public boolean hasEndTIme() {
                return ((bitField0_ & 0x00020000) == 0x00020000);
            }

            /**
             * <code>optional uint64 endTIme = 18;</code>
             * <p>
             * <pre>
             * 结束时间
             * </pre>
             */
            public long getEndTIme() {
                return endTIme_;
            }

            /**
             * <code>optional uint64 endTIme = 18;</code>
             * <p>
             * <pre>
             * 结束时间
             * </pre>
             */
            public Builder setEndTIme(long value) {
                bitField0_ |= 0x00020000;
                endTIme_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional uint64 endTIme = 18;</code>
             * <p>
             * <pre>
             * 结束时间
             * </pre>
             */
            public Builder clearEndTIme() {
                bitField0_ = (bitField0_ & ~0x00020000);
                endTIme_ = 0L;
                onChanged();
                return this;
            }

            /**
             * <code>optional string httpURL = 19;</code>
             * <p>
             * <pre>
             * httpURL
             * </pre>
             */
            public boolean hasHttpURL() {
                return ((bitField0_ & 0x00040000) == 0x00040000);
            }

            /**
             * <code>optional string httpURL = 19;</code>
             * <p>
             * <pre>
             * httpURL
             * </pre>
             */
            public String getHttpURL() {
                Object ref = httpURL_;
                if (!(ref instanceof String)) {
                    String s = ((com.google.protobuf.ByteString) ref)
                            .toStringUtf8();
                    httpURL_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <code>optional string httpURL = 19;</code>
             * <p>
             * <pre>
             * httpURL
             * </pre>
             */
            public Builder setHttpURL(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00040000;
                httpURL_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string httpURL = 19;</code>
             * <p>
             * <pre>
             * httpURL
             * </pre>
             */
            public com.google.protobuf.ByteString
            getHttpURLBytes() {
                Object ref = httpURL_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    httpURL_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>optional string httpURL = 19;</code>
             * <p>
             * <pre>
             * httpURL
             * </pre>
             */
            public Builder setHttpURLBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00040000;
                httpURL_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string httpURL = 19;</code>
             * <p>
             * <pre>
             * httpURL
             * </pre>
             */
            public Builder clearHttpURL() {
                bitField0_ = (bitField0_ & ~0x00040000);
                httpURL_ = getDefaultInstance().getHttpURL();
                onChanged();
                return this;
            }

            /**
             * <code>optional string httpMethod = 20;</code>
             * <p>
             * <pre>
             * httpMethod
             * </pre>
             */
            public boolean hasHttpMethod() {
                return ((bitField0_ & 0x00080000) == 0x00080000);
            }

            /**
             * <code>optional string httpMethod = 20;</code>
             * <p>
             * <pre>
             * httpMethod
             * </pre>
             */
            public String getHttpMethod() {
                Object ref = httpMethod_;
                if (!(ref instanceof String)) {
                    String s = ((com.google.protobuf.ByteString) ref)
                            .toStringUtf8();
                    httpMethod_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <code>optional string httpMethod = 20;</code>
             * <p>
             * <pre>
             * httpMethod
             * </pre>
             */
            public Builder setHttpMethod(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00080000;
                httpMethod_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string httpMethod = 20;</code>
             * <p>
             * <pre>
             * httpMethod
             * </pre>
             */
            public com.google.protobuf.ByteString
            getHttpMethodBytes() {
                Object ref = httpMethod_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    httpMethod_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>optional string httpMethod = 20;</code>
             * <p>
             * <pre>
             * httpMethod
             * </pre>
             */
            public Builder setHttpMethodBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00080000;
                httpMethod_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string httpMethod = 20;</code>
             * <p>
             * <pre>
             * httpMethod
             * </pre>
             */
            public Builder clearHttpMethod() {
                bitField0_ = (bitField0_ & ~0x00080000);
                httpMethod_ = getDefaultInstance().getHttpMethod();
                onChanged();
                return this;
            }

            /**
             * <code>optional string srcMac = 21;</code>
             * <p>
             * <pre>
             * 源mac地址
             * </pre>
             */
            public boolean hasSrcMac() {
                return ((bitField0_ & 0x00100000) == 0x00100000);
            }

            /**
             * <code>optional string srcMac = 21;</code>
             * <p>
             * <pre>
             * 源mac地址
             * </pre>
             */
            public String getSrcMac() {
                Object ref = srcMac_;
                if (!(ref instanceof String)) {
                    String s = ((com.google.protobuf.ByteString) ref)
                            .toStringUtf8();
                    srcMac_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <code>optional string srcMac = 21;</code>
             * <p>
             * <pre>
             * 源mac地址
             * </pre>
             */
            public Builder setSrcMac(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00100000;
                srcMac_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string srcMac = 21;</code>
             * <p>
             * <pre>
             * 源mac地址
             * </pre>
             */
            public com.google.protobuf.ByteString
            getSrcMacBytes() {
                Object ref = srcMac_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    srcMac_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>optional string srcMac = 21;</code>
             * <p>
             * <pre>
             * 源mac地址
             * </pre>
             */
            public Builder setSrcMacBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00100000;
                srcMac_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string srcMac = 21;</code>
             * <p>
             * <pre>
             * 源mac地址
             * </pre>
             */
            public Builder clearSrcMac() {
                bitField0_ = (bitField0_ & ~0x00100000);
                srcMac_ = getDefaultInstance().getSrcMac();
                onChanged();
                return this;
            }

            /**
             * <code>optional string dstMac = 22;</code>
             * <p>
             * <pre>
             * 目的mac地址
             * </pre>
             */
            public boolean hasDstMac() {
                return ((bitField0_ & 0x00200000) == 0x00200000);
            }

            /**
             * <code>optional string dstMac = 22;</code>
             * <p>
             * <pre>
             * 目的mac地址
             * </pre>
             */
            public String getDstMac() {
                Object ref = dstMac_;
                if (!(ref instanceof String)) {
                    String s = ((com.google.protobuf.ByteString) ref)
                            .toStringUtf8();
                    dstMac_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <code>optional string dstMac = 22;</code>
             * <p>
             * <pre>
             * 目的mac地址
             * </pre>
             */
            public Builder setDstMac(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00200000;
                dstMac_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string dstMac = 22;</code>
             * <p>
             * <pre>
             * 目的mac地址
             * </pre>
             */
            public com.google.protobuf.ByteString
            getDstMacBytes() {
                Object ref = dstMac_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    dstMac_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>optional string dstMac = 22;</code>
             * <p>
             * <pre>
             * 目的mac地址
             * </pre>
             */
            public Builder setDstMacBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00200000;
                dstMac_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string dstMac = 22;</code>
             * <p>
             * <pre>
             * 目的mac地址
             * </pre>
             */
            public Builder clearDstMac() {
                bitField0_ = (bitField0_ & ~0x00200000);
                dstMac_ = getDefaultInstance().getDstMac();
                onChanged();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:com.handge.bigdata.proto.PacketData)
        }

        // @@protoc_insertion_point(class_scope:com.handge.bigdata.proto.PacketData)
    }

    // @@protoc_insertion_point(outer_class_scope)
}
